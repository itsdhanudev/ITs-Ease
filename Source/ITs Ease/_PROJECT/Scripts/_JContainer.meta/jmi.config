{"autoCompleteData":{"varMap":{}},"compiledCode":["package JAVARuntime;","","import java.util.*;","import java.util.concurrent.*;","import java.util.concurrent.atomic.*;","import java.util.concurrent.locks.*;","import java.util.function.*;","import java.util.regex.*;","import java.util.stream.*;","import java.util.zip.*;","import java.text.*;","import java.net.*;","import java.math.*;","import java.io.*;","import java.nio.*;","import java.time.*;","import java.time.chrono.*;","import java.time.format.*;","import java.time.temporal.*;","import java.time.zone.*;","","","","public class _JContainer{}","","//C-R:Easer","final class Easer { //[I-S]LN\u003d0;[I-E]","  private Easer() {} //[I-S]LN\u003d1;[I-E]"," //[I-S]LN\u003d2;[I-E]","  public static float ease(float start, float end, float t, EasingTypes type) { //[I-S]LN\u003d3;[I-E]","    switch (type) { //[I-S]LN\u003d4;[I-E]","      case Linear: //[I-S]LN\u003d5;[I-E]","        return EasingFunctions.linear(start, end, t); //[I-S]LN\u003d6;[I-E]","      case EaseInQuad: //[I-S]LN\u003d7;[I-E]","        return EasingFunctions.easeInQuad(start, end, t); //[I-S]LN\u003d8;[I-E]","      case EaseOutQuad: //[I-S]LN\u003d9;[I-E]","        return EasingFunctions.easeOutQuad(start, end, t); //[I-S]LN\u003d10;[I-E]","      case EaseInOutQuad: //[I-S]LN\u003d11;[I-E]","        return EasingFunctions.easeInOutQuad(start, end, t); //[I-S]LN\u003d12;[I-E]","      case EaseInCubic: //[I-S]LN\u003d13;[I-E]","        return EasingFunctions.easeInCubic(start, end, t); //[I-S]LN\u003d14;[I-E]","      case EaseOutCubic: //[I-S]LN\u003d15;[I-E]","        return EasingFunctions.easeOutCubic(start, end, t); //[I-S]LN\u003d16;[I-E]","      case EaseInOutCubic: //[I-S]LN\u003d17;[I-E]","        return EasingFunctions.easeInOutCubic(start, end, t); //[I-S]LN\u003d18;[I-E]","      case EaseInQuart: //[I-S]LN\u003d19;[I-E]","        return EasingFunctions.easeInQuart(start, end, t); //[I-S]LN\u003d20;[I-E]","      case EaseOutQuart: //[I-S]LN\u003d21;[I-E]","        return EasingFunctions.easeOutQuart(start, end, t); //[I-S]LN\u003d22;[I-E]","      case EaseInOutQuart: //[I-S]LN\u003d23;[I-E]","        return EasingFunctions.easeInOutQuart(start, end, t); //[I-S]LN\u003d24;[I-E]","      case EaseInQuint: //[I-S]LN\u003d25;[I-E]","        return EasingFunctions.easeInQuint(start, end, t); //[I-S]LN\u003d26;[I-E]","      case EaseOutQuint: //[I-S]LN\u003d27;[I-E]","        return EasingFunctions.easeOutQuint(start, end, t); //[I-S]LN\u003d28;[I-E]","      case EaseInOutQuint: //[I-S]LN\u003d29;[I-E]","        return EasingFunctions.easeInOutQuint(start, end, t); //[I-S]LN\u003d30;[I-E]","      case EaseInSine: //[I-S]LN\u003d31;[I-E]","        return EasingFunctions.easeInSine(start, end, t); //[I-S]LN\u003d32;[I-E]","      case EaseOutSine: //[I-S]LN\u003d33;[I-E]","        return EasingFunctions.easeOutSine(start, end, t); //[I-S]LN\u003d34;[I-E]","      case EaseInOutSine: //[I-S]LN\u003d35;[I-E]","        return EasingFunctions.easeInOutSine(start, end, t); //[I-S]LN\u003d36;[I-E]","      case EaseInExpo: //[I-S]LN\u003d37;[I-E]","        return EasingFunctions.easeInExpo(start, end, t); //[I-S]LN\u003d38;[I-E]","      case EaseOutExpo: //[I-S]LN\u003d39;[I-E]","        return EasingFunctions.easeOutExpo(start, end, t); //[I-S]LN\u003d40;[I-E]","      case EaseInOutExpo: //[I-S]LN\u003d41;[I-E]","        return EasingFunctions.easeInOutExpo(start, end, t); //[I-S]LN\u003d42;[I-E]","      case EaseInCirc: //[I-S]LN\u003d43;[I-E]","        return EasingFunctions.easeInCirc(start, end, t); //[I-S]LN\u003d44;[I-E]","      case EaseOutCirc: //[I-S]LN\u003d45;[I-E]","        return EasingFunctions.easeOutCirc(start, end, t); //[I-S]LN\u003d46;[I-E]","      case EaseInOutCirc: //[I-S]LN\u003d47;[I-E]","        return EasingFunctions.easeInOutCirc(start, end, t); //[I-S]LN\u003d48;[I-E]","      case EaseInBack: //[I-S]LN\u003d49;[I-E]","        return EasingFunctions.easeInBack(start, end, t); //[I-S]LN\u003d50;[I-E]","      case EaseOutBack: //[I-S]LN\u003d51;[I-E]","        return EasingFunctions.easeOutBack(start, end, t); //[I-S]LN\u003d52;[I-E]","      case EaseInOutBack: //[I-S]LN\u003d53;[I-E]","        return EasingFunctions.easeInOutBack(start, end, t); //[I-S]LN\u003d54;[I-E]","      case EaseOutBounce: //[I-S]LN\u003d55;[I-E]","        return EasingFunctions.easeOutBounce(start, end, t); //[I-S]LN\u003d56;[I-E]","      case EaseInBounce: //[I-S]LN\u003d57;[I-E]","        return EasingFunctions.easeInBounce(start, end, t); //[I-S]LN\u003d58;[I-E]","      case EaseInOutBounce: //[I-S]LN\u003d59;[I-E]","        return EasingFunctions.easeInOutBounce(start, end, t); //[I-S]LN\u003d60;[I-E]","      case EaseInElastic: //[I-S]LN\u003d61;[I-E]","        return EasingFunctions.easeInElastic(start, end, t); //[I-S]LN\u003d62;[I-E]","      case EaseOutElastic: //[I-S]LN\u003d63;[I-E]","        return EasingFunctions.easeOutElastic(start, end, t); //[I-S]LN\u003d64;[I-E]","      case EaseInOutElastic: //[I-S]LN\u003d65;[I-E]","        return EasingFunctions.easeInOutElastic(start, end, t); //[I-S]LN\u003d66;[I-E]","      case SmoothStep: //[I-S]LN\u003d67;[I-E]","        return EasingFunctions.smoothStep(start, end, t); //[I-S]LN\u003d68;[I-E]","      case SmootherStep: //[I-S]LN\u003d69;[I-E]","        return EasingFunctions.smootherStep(start, end, t); //[I-S]LN\u003d70;[I-E]","      default: //[I-S]LN\u003d71;[I-E]","        return start; // fallback //[I-S]LN\u003d72;[I-E]","    } //[I-S]LN\u003d73;[I-E]","  } //[I-S]LN\u003d74;[I-E]"," //[I-S]LN\u003d75;[I-E]","  public static Vector2 easeVec(Vector2 start, Vector2 end, float t, EasingTypes type) { //[I-S]LN\u003d76;[I-E]","    Vector2 desiredVec \u003d new Vector2(ease(start.getX(), end.getX(), t, type), ease(start.getY(), end.getY(), t, type)); //[I-S]LN\u003d77;[I-E]","    return desiredVec; //[I-S]LN\u003d78;[I-E]","  } //[I-S]LN\u003d79;[I-E]"," //[I-S]LN\u003d80;[I-E]","  public static Vector3 easeVec(Vector3 start, Vector3 end, float t, EasingTypes type) { //[I-S]LN\u003d81;[I-E]","    Vector3 desiredVec \u003d new Vector3(ease(start.getX(), end.getX(), t, type), ease(start.getY(), end.getY(), t, type), ease(start.getZ(), end.getZ(), t, type)); //[I-S]LN\u003d82;[I-E]","    return desiredVec; //[I-S]LN\u003d83;[I-E]","  }  //[I-S]LN\u003d84;[I-E]"," //[I-S]LN\u003d85;[I-E]","  public static Quaternion easeQua(Vector3 start, Vector3 end, float t, EasingTypes type) { //[I-S]LN\u003d86;[I-E]","    Quaternion desiredQua; //[I-S]LN\u003d87;[I-E]","    desiredQua \u003d Quaternion.fromEuler(new Vector3(ease(start.getX(), end.getX(), t, type), ease(start.getY(), end.getY(), t, type), ease(start.getZ(), end.getZ(), t, type))); //[I-S]LN\u003d88;[I-E]","    return desiredQua; //[I-S]LN\u003d89;[I-E]","  } //[I-S]LN\u003d90;[I-E]","  /* //[I-S]LN\u003d91;[I-E]","   * still finding a btter ways to use easings which more parameters //[I-S]LN\u003d92;[I-E]","   */ //[I-S]LN\u003d93;[I-E]","  /* //[I-S]LN\u003d94;[I-E]","  public static float ease(float start, float end, float t, EasingTypes type, float... params) { //[I-S]LN\u003d95;[I-E]","    switch (type) { //[I-S]LN\u003d96;[I-E]","      case Linear: //[I-S]LN\u003d97;[I-E]","        return EasingFunctions.linear(start, end, t); //[I-S]LN\u003d98;[I-E]","      case EaseInQuad: //[I-S]LN\u003d99;[I-E]","        return EasingFunctions.easeInQuad(start, end, t); //[I-S]LN\u003d100;[I-E]","      case EaseOutQuad: //[I-S]LN\u003d101;[I-E]","        return EasingFunctions.easeOutQuad(start, end, t); //[I-S]LN\u003d102;[I-E]","      case EaseInOutQuad: //[I-S]LN\u003d103;[I-E]","        return EasingFunctions.easeInOutQuad(start, end, t); //[I-S]LN\u003d104;[I-E]","      case EaseInCubic: //[I-S]LN\u003d105;[I-E]","        return EasingFunctions.easeInCubic(start, end, t); //[I-S]LN\u003d106;[I-E]","      case EaseOutCubic: //[I-S]LN\u003d107;[I-E]","        return EasingFunctions.easeOutCubic(start, end, t); //[I-S]LN\u003d108;[I-E]","      case EaseInOutCubic: //[I-S]LN\u003d109;[I-E]","        return EasingFunctions.easeInOutCubic(start, end, t); //[I-S]LN\u003d110;[I-E]","      case EaseInQuart: //[I-S]LN\u003d111;[I-E]","        return EasingFunctions.easeInQuart(start, end, t); //[I-S]LN\u003d112;[I-E]","      case EaseOutQuart: //[I-S]LN\u003d113;[I-E]","        return EasingFunctions.easeOutQuart(start, end, t); //[I-S]LN\u003d114;[I-E]","      case EaseInOutQuart: //[I-S]LN\u003d115;[I-E]","        return EasingFunctions.easeInOutQuart(start, end, t); //[I-S]LN\u003d116;[I-E]","      case EaseInQuint: //[I-S]LN\u003d117;[I-E]","        return EasingFunctions.easeInQuint(start, end, t); //[I-S]LN\u003d118;[I-E]","      case EaseOutQuint: //[I-S]LN\u003d119;[I-E]","        return EasingFunctions.easeOutQuint(start, end, t); //[I-S]LN\u003d120;[I-E]","      case EaseInOutQuint: //[I-S]LN\u003d121;[I-E]","        return EasingFunctions.easeInOutQuint(start, end, t); //[I-S]LN\u003d122;[I-E]","      case EaseInSine: //[I-S]LN\u003d123;[I-E]","        return EasingFunctions.easeInSine(start, end, t); //[I-S]LN\u003d124;[I-E]","      case EaseOutSine: //[I-S]LN\u003d125;[I-E]","        return EasingFunctions.easeOutSine(start, end, t); //[I-S]LN\u003d126;[I-E]","      case EaseInOutSine: //[I-S]LN\u003d127;[I-E]","        return EasingFunctions.easeInOutSine(start, end, t); //[I-S]LN\u003d128;[I-E]","      case EaseInExpo: //[I-S]LN\u003d129;[I-E]","        return EasingFunctions.easeInExpo(start, end, t); //[I-S]LN\u003d130;[I-E]","      case EaseOutExpo: //[I-S]LN\u003d131;[I-E]","        return EasingFunctions.easeOutExpo(start, end, t); //[I-S]LN\u003d132;[I-E]","      case EaseInOutExpo: //[I-S]LN\u003d133;[I-E]","        return EasingFunctions.easeInOutExpo(start, end, t); //[I-S]LN\u003d134;[I-E]","      case EaseInCirc: //[I-S]LN\u003d135;[I-E]","        return EasingFunctions.easeInCirc(start, end, t); //[I-S]LN\u003d136;[I-E]","      case EaseOutCirc: //[I-S]LN\u003d137;[I-E]","        return EasingFunctions.easeOutCirc(start, end, t); //[I-S]LN\u003d138;[I-E]","      case EaseInOutCirc: //[I-S]LN\u003d139;[I-E]","        return EasingFunctions.easeInOutCirc(start, end, t); //[I-S]LN\u003d140;[I-E]","      case EaseInBack: //[I-S]LN\u003d141;[I-E]","        return EasingFunctions.easeInBack(start, end, t); //[I-S]LN\u003d142;[I-E]","      case EaseOutBack: //[I-S]LN\u003d143;[I-E]","        return EasingFunctions.easeOutBack(start, end, t); //[I-S]LN\u003d144;[I-E]","      case EaseInOutBack: //[I-S]LN\u003d145;[I-E]","        return EasingFunctions.easeInOutBack(start, end, t); //[I-S]LN\u003d146;[I-E]","      case EaseOutBounce: //[I-S]LN\u003d147;[I-E]","        return EasingFunctions.easeOutBounce(start, end, t); //[I-S]LN\u003d148;[I-E]","      case EaseInBounce: //[I-S]LN\u003d149;[I-E]","        return EasingFunctions.easeInBounce(start, end, t); //[I-S]LN\u003d150;[I-E]","      case EaseInOutBounce: //[I-S]LN\u003d151;[I-E]","        return EasingFunctions.easeInOutBounce(start, end, t); //[I-S]LN\u003d152;[I-E]","      case EaseInElastic: //[I-S]LN\u003d153;[I-E]","        return EasingFunctions.easeInElastic(start, end, t); //[I-S]LN\u003d154;[I-E]","      case EaseOutElastic: //[I-S]LN\u003d155;[I-E]","        return EasingFunctions.easeOutElastic(start, end, t); //[I-S]LN\u003d156;[I-E]","      case EaseInOutElastic: //[I-S]LN\u003d157;[I-E]","        return EasingFunctions.easeInOutElastic(start, end, t); //[I-S]LN\u003d158;[I-E]","      case SmoothStep: //[I-S]LN\u003d159;[I-E]","        return EasingFunctions.smoothStep(start, end, t); //[I-S]LN\u003d160;[I-E]","      case SmootherStep: //[I-S]LN\u003d161;[I-E]","        return EasingFunctions.smootherStep(start, end, t); //[I-S]LN\u003d162;[I-E]","      default: //[I-S]LN\u003d163;[I-E]","        return start; // fallback //[I-S]LN\u003d164;[I-E]","    } //[I-S]LN\u003d165;[I-E]","  } //[I-S]LN\u003d166;[I-E]","  */ //[I-S]LN\u003d167;[I-E]"," //[I-S]LN\u003d168;[I-E]","} //[I-S]LN\u003d169;[I-E]"],"originalFileName":"_JContainer.java","referencedClasses":[],"referencesUpdatedV2":true}