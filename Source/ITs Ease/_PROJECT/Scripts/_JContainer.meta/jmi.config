{"autoCompleteData":{"varMap":{}},"compiledCode":["package JAVARuntime;","","import java.util.*;","import java.util.concurrent.*;","import java.util.concurrent.atomic.*;","import java.util.concurrent.locks.*;","import java.util.function.*;","import java.util.regex.*;","import java.util.stream.*;","import java.util.zip.*;","import java.text.*;","import java.net.*;","import java.math.*;","import java.io.*;","import java.nio.*;","import java.time.*;","import java.time.chrono.*;","import java.time.format.*;","import java.time.temporal.*;","import java.time.zone.*;","","","","public class _JContainer{}","","//C-R:Test","class Test extends Component {","   /* @Author Dhanu */ //[I-S]LN\u003d0;[I-E]","   public enum Mode { //[I-S]LN\u003d1;[I-E]","     P, //[I-S]LN\u003d2;[I-E]","     R, //[I-S]LN\u003d3;[I-E]","     S //[I-S]LN\u003d4;[I-E]","   } //[I-S]LN\u003d5;[I-E]","    //[I-S]LN\u003d6;[I-E]","   public Mode mode \u003d Mode.P; //[I-S]LN\u003d7;[I-E]","   public float time, duration; //[I-S]LN\u003d8;[I-E]","    //[I-S]LN\u003d9;[I-E]","   public Vector3 start \u003d new Vector3(); //[I-S]LN\u003d10;[I-E]","   public Vector3 end \u003d new Vector3(); //[I-S]LN\u003d11;[I-E]","   public Text3D text; //[I-S]LN\u003d12;[I-E]","    //[I-S]LN\u003d13;[I-E]","   public EasingTypes type; //[I-S]LN\u003d14;[I-E]","   public Curve curve \u003d new Curve(); //[I-S]LN\u003d15;[I-E]","    //[I-S]LN\u003d16;[I-E]","   public boolean useCurve; //[I-S]LN\u003d17;[I-E]","   /// Run only once //[I-S]LN\u003d18;[I-E]","public    void start() {} //[I-S]LN\u003d19;[I-E]","    //[I-S]LN\u003d20;[I-E]","   /// Repeat every frame //[I-S]LN\u003d21;[I-E]","public    void repeat() { //[I-S]LN\u003d22;[I-E]","     if (time \u003c duration) { //[I-S]LN\u003d23;[I-E]","       time +\u003d Math.bySecond(); //[I-S]LN\u003d24;[I-E]","     } //[I-S]LN\u003d25;[I-E]","    //[I-S]LN\u003d26;[I-E]","     float t \u003d Mathf.normalize(time / (duration), 0f, 1f); //[I-S]LN\u003d27;[I-E]","     switch (mode) { //[I-S]LN\u003d28;[I-E]","       case P: //[I-S]LN\u003d29;[I-E]","         if (useCurve) myTransform.setPosition(Easer.easeVec(start, end, t, curve)); //[I-S]LN\u003d30;[I-E]","         else myTransform.setPosition(Easer.easeVec(start, end, t, curve)); //[I-S]LN\u003d31;[I-E]","         break; //[I-S]LN\u003d32;[I-E]","       case R: //[I-S]LN\u003d33;[I-E]","         if (useCurve) myTransform.setRotation(Easer.easeQua(start, end, t, curve)); //[I-S]LN\u003d34;[I-E]","         else myTransform.setRotation(Easer.easeQua(start, end, t, type)); //[I-S]LN\u003d35;[I-E]","         break; //[I-S]LN\u003d36;[I-E]","       case S: //[I-S]LN\u003d37;[I-E]","         if (useCurve) myTransform.setScale(Easer.easeVec(start, end, t, curve)); //[I-S]LN\u003d38;[I-E]","         else myTransform.setScale(Easer.easeVec(start, end, t, type)); //[I-S]LN\u003d39;[I-E]","         break; //[I-S]LN\u003d40;[I-E]","       default: //[I-S]LN\u003d41;[I-E]","     }  //[I-S]LN\u003d42;[I-E]","    //[I-S]LN\u003d43;[I-E]","     text.setText(new String().format(\"%.2f\", time)); //[I-S]LN\u003d44;[I-E]","   } //[I-S]LN\u003d45;[I-E]","}"],"originalFileName":"_JContainer.java","referencedClasses":[],"referencesUpdatedV2":true}